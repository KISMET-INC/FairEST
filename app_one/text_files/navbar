<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>home</title>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat+Alternates:wght@700" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300&" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Bree+Serif" rel="stylesheet">
    
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    {% load static %}
    <link rel="stylesheet" href="{% static 'global.css' %}">
    <link rel="stylesheet" href="{% static 'home.css' %}">
</head>
<body>

    <div id="CANVAS_long">

        <div id="TOP_long">
            <nav>
                <div class="nav_left">
                    <h2 class = 'h2_nav'> FAIR<i class="fa fa-handshake-o nav"></i>EST</h2>
                    <!-- <a href='/dashboard' class = 'h2_nav'> Home</p> -->
                </div>
                <div class="nav_right">
                    <a class = 'nav_right h2_nav' href = '/signin'>Sign in</a>
                </div>
            </nav>
        </div>


        #=============================================##
# add_quote_to_dog()
#=============================================##
def add_quote_to_dog(request, dog_id):
    post = request.POST
    
    # if 'user_id' not in request.session:
    #     return redirect('/')
    # #-------------------#
    price_book = Price_Book.objects.all()
    if len(price_book) == 0 :
        print('initializing starting price')
        Price_Book.objects.create()

    base_price = Price_Book.objects.get(id = 1)

    this_dog = Dog.objects.get(id= dog_id)
    weight_arr = [0,0,0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90]
    weight_price = weight_arr[round(this_dog.weight/10)]

    coat_price = 0;
    coat_dict = {
        'Slick' : 0,
        'Short' : 5,
        'Medium' : 10,
        'Clippable' : 10,
        'Doodle' : 15,
        'Double' : 15,
        'Long Double' : 25,
    }

    for key,value in coat_dict.items():
        if this_dog.coat.name == key:
            coat_price = value + base_price.base_price

    
    total = coat_price + weight_price

    new_estimate = Estimate.objects.create(owner=this_dog.owner)
    new_quote = Quote.objects.create(weight_price = weight_price, coat_price = coat_price, estimate = new_estimate, total = total, dog = this_dog, )
    print(f'weight {weight_price}')
    print(f'coat {coat_price}')


    return redirect(f'/show_owner_info/{this_dog.owner.id}')



     # Calculate birthday from years and months estimate
    today = date.today()
    years = 0;
    months = 0;

    # if years input ! empty 
    if post['years'] != '':
        years = int(post['years'])

    if post['months'] != '':
        months = int(post['months'])

    # calulate bday from todays date
    bday = date(today.year - years, today.month - months, today.day)
    
    # get coat type from coat
    base_price = Price_Book.objects.get(id = 1)
    print(f'start price {base_price.base_price}')
    coat = Coat_Type.objects.get(id = int(post['coat_type']))

    # CALCULATE COAT PRICE 
    coat_price = 0;
    coat_dict = {
        'Slick' : 0,
        'Short' : 5,
        'Medium' : 10,
        'Clippable' : 10,
        'Doodle' : 15,
        'Double' : 15,
        'Long Double' : 25,
    }

    for key,value in coat_dict.items():
        if coat.name == key:
            coat_price = value + base_price.base_price

    # CALCULATE WEIGHT PRICE 
    weight_arr = [0,0,0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90]
    weight_price = weight_arr[round(int(post['weight'])/10)]


    # CALCULATE QUOTE TOTAL
    print(coat_price)
    print(weight_price)
    total = coat_price + weight_price
    print(total)
    #Getting objects together


    this_dog = Dog.objects.create(name = post['pet_name'], weight = post['weight'],bday = bday, coat = coat, notes=post['notes'], owner=this_owner)

    new_quote = Quote.objects.create(start_price = request.session['start_price'], weight_price = weight_price, coat_price = coat_price, dog = this_dog, owner = this_owner )

    this_estimate.quotes.add(new_quote)
    